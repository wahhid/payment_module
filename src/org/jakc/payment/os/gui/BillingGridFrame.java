/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jakc.payment.os.gui;

import javax.swing.JOptionPane;
import org.jakc.common.util.ProcessCallBack;
import org.jakc.payment.grid.BillingParkingGrid;
import org.jakc.payment.os.controller.BillingGridController;
import org.openswing.swing.client.GridControl;
import org.openswing.swing.domains.java.Domain;
import org.openswing.swing.internationalization.java.Resources;
import org.openswing.swing.mdi.client.InternalFrame;
import org.openswing.swing.mdi.client.MDIFrame;
import org.openswing.swing.util.java.Consts;

/**
 *
 * @author wahhid
 */
public class BillingGridFrame extends InternalFrame {

    private BillingGridController controller;
    private BillingParkingGrid gridController;
   
    
    /**
     * Creates new form BillingGridFrame
     */
    public BillingGridFrame(BillingGridController controller) {
        initComponents();        
        this.controller = controller;
        this.insertButton1.setText("Insert");
        this.editButton1.setText("Edit");
        this.saveButton1.setText("Save");
        this.reloadButton1.setText("Reload");
        this.filterButton1.setText("Find");
        this.deleteButton1.setText("Delete");
        this.dateColumn1.setFormat(Resources.DMY);
        this.gridController = new BillingParkingGrid(this.controller.getConn());
        this.gridControl1.setController(controller);
        this.gridControl1.setGridDataLocator(controller);
        this.gridControl2.setController(gridController);
        this.gridControl2.setGridDataLocator(gridController);
        this.cbbillingmonth.setDomain(this.controller.getBc().getMonthNameController().getCB());
        this.comboColumn1.setDomain(this.CBBillingStatus());
    }

    private Domain CBBillingStatus(){
        Domain d = new Domain("BILLINGSTATUS");
        d.addDomainPair(0, "Open");
        d.addDomainPair(1, "Closed");
        return d;
    }
    
    public BillingParkingGrid getGridController() {
        return gridController;
    }

    public GridControl getGridControl1() {
        return gridControl1;
    }

    public void setGridControl1(GridControl gridControl1) {
        this.gridControl1 = gridControl1;
    }

    public GridControl getGridControl2() {
        return gridControl2;
    }

    public void setGridControl2(GridControl gridControl2) {
        this.gridControl2 = gridControl2;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        insertButton1 = new org.openswing.swing.client.InsertButton();
        editButton1 = new org.openswing.swing.client.EditButton();
        saveButton1 = new org.openswing.swing.client.SaveButton();
        deleteButton1 = new org.openswing.swing.client.DeleteButton();
        reloadButton1 = new org.openswing.swing.client.ReloadButton();
        filterButton1 = new org.openswing.swing.client.FilterButton();
        navigatorBar1 = new org.openswing.swing.client.NavigatorBar();
        gridControl1 = new org.openswing.swing.client.GridControl();
        integerColumn1 = new org.openswing.swing.table.columns.client.IntegerColumn();
        integerColumn2 = new org.openswing.swing.table.columns.client.IntegerColumn();
        cbbillingmonth = new org.openswing.swing.table.columns.client.ComboColumn();
        comboColumn1 = new org.openswing.swing.table.columns.client.ComboColumn();
        btngenerate = new javax.swing.JButton();
        gridControl2 = new org.openswing.swing.client.GridControl();
        textColumn1 = new org.openswing.swing.table.columns.client.TextColumn();
        dateColumn1 = new org.openswing.swing.table.columns.client.DateColumn();
        textColumn3 = new org.openswing.swing.table.columns.client.TextColumn();
        dateColumn3 = new org.openswing.swing.table.columns.client.DateColumn();
        dateColumn2 = new org.openswing.swing.table.columns.client.DateColumn();
        textColumn2 = new org.openswing.swing.table.columns.client.TextColumn();
        currencyColumn1 = new org.openswing.swing.table.columns.client.CurrencyColumn();
        navigatorBar2 = new org.openswing.swing.client.NavigatorBar();
        btnconfirm = new javax.swing.JButton();
        btntransfer = new javax.swing.JButton();

        setTitle("Billing");
        setUniqueInstance(true);

        insertButton1.setAttributeName("description");
        insertButton1.setButtonBehavior(Consts.BUTTON_IMAGE_AND_TEXT);
        insertButton1.setButtonId("null");

        editButton1.setButtonBehavior(Consts.BUTTON_IMAGE_AND_TEXT);

        saveButton1.setButtonBehavior(Consts.BUTTON_IMAGE_AND_TEXT);
        saveButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButton1ActionPerformed(evt);
            }
        });

        deleteButton1.setButtonBehavior(Consts.BUTTON_IMAGE_AND_TEXT);

        reloadButton1.setButtonBehavior(Consts.BUTTON_IMAGE_AND_TEXT);

        filterButton1.setButtonBehavior(Consts.BUTTON_IMAGE_AND_TEXT);

        gridControl1.setDeleteButton(deleteButton1);
        gridControl1.setEditButton(editButton1);
        gridControl1.setEditOnSingleRow(true);
        gridControl1.setFilterButton(filterButton1);
        gridControl1.setInsertButton(insertButton1);
        gridControl1.setNavBar(navigatorBar1);
        gridControl1.setReloadButton(reloadButton1);
        gridControl1.setSaveButton(saveButton1);
        gridControl1.setValueObjectClassName("org.jakc.payment.os.vo.BillingVo");
        gridControl1.getColumnContainer().setLayout(new java.awt.GridLayout(1, 0));

        integerColumn1.setColumnFilterable(true);
        integerColumn1.setColumnName("billing_id");
        integerColumn1.setColumnSortable(true);
        gridControl1.getColumnContainer().add(integerColumn1);

        integerColumn2.setColumnFilterable(true);
        integerColumn2.setColumnName("billing_year");
        integerColumn2.setColumnSortable(true);
        integerColumn2.setEditableOnEdit(true);
        integerColumn2.setEditableOnInsert(true);
        gridControl1.getColumnContainer().add(integerColumn2);

        cbbillingmonth.setColumnFilterable(true);
        cbbillingmonth.setColumnName("billing_month");
        cbbillingmonth.setColumnSortable(true);
        cbbillingmonth.setEditableOnEdit(true);
        cbbillingmonth.setEditableOnInsert(true);
        gridControl1.getColumnContainer().add(cbbillingmonth);

        comboColumn1.setColumnFilterable(true);
        comboColumn1.setColumnName("billing_status");
        comboColumn1.setColumnSortable(true);
        gridControl1.getColumnContainer().add(comboColumn1);

        btngenerate.setText("Generate");
        btngenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngenerateActionPerformed(evt);
            }
        });

        gridControl2.setNavBar(navigatorBar2);
        gridControl2.setValueObjectClassName("org.jakc.payment.os.vo.BillingParkingVo");
        gridControl2.getColumnContainer().setLayout(new java.awt.GridLayout(1, 0));

        textColumn1.setColumnFilterable(true);
        textColumn1.setColumnName("unitno");
        textColumn1.setColumnSortable(true);
        gridControl2.getColumnContainer().add(textColumn1);

        dateColumn1.setColumnFilterable(true);
        dateColumn1.setColumnName("date_trans");
        dateColumn1.setColumnSortable(true);
        gridControl2.getColumnContainer().add(dateColumn1);

        textColumn3.setColumnFilterable(true);
        textColumn3.setColumnName("jenis_langganan");
        textColumn3.setColumnSortable(true);
        gridControl2.getColumnContainer().add(textColumn3);

        dateColumn3.setColumnFilterable(true);
        dateColumn3.setColumnName("awal");
        dateColumn3.setColumnSortable(true);
        gridControl2.getColumnContainer().add(dateColumn3);

        dateColumn2.setColumnFilterable(true);
        dateColumn2.setColumnName("akhir");
        dateColumn2.setColumnSortable(true);
        gridControl2.getColumnContainer().add(dateColumn2);

        textColumn2.setColumnFilterable(true);
        textColumn2.setColumnName("description");
        textColumn2.setColumnSortable(true);
        gridControl2.getColumnContainer().add(textColumn2);

        currencyColumn1.setColumnFilterable(true);
        currencyColumn1.setColumnName("amount");
        currencyColumn1.setColumnSortable(true);
        currencyColumn1.setCurrencySymbol("Rp");
        gridControl2.getColumnContainer().add(currencyColumn1);

        btnconfirm.setText("Confirm");
        btnconfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconfirmActionPerformed(evt);
            }
        });

        btntransfer.setText("Transfer");
        btntransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntransferActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gridControl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(insertButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reloadButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filterButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btngenerate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnconfirm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btntransfer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(navigatorBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(gridControl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(navigatorBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(filterButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(reloadButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(deleteButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btngenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnconfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btntransfer, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(insertButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                        .addComponent(editButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                    .addComponent(saveButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(navigatorBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gridControl1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(navigatorBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gridControl2, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btngenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngenerateActionPerformed
        // TODO add your handling code here:
        if(this.controller.getVo().getBilling_status() == 1){
            JOptionPane.showMessageDialog(MDIFrame.getInstance(), "Already Confirm");
        }else{
            ProcessCallBack pcb = this.controller.generateBilling();
            if(pcb.isError()){               
                JOptionPane.showMessageDialog(MDIFrame.getInstance(), pcb.getErrmsg());
                return;
            }
            JOptionPane.showMessageDialog(MDIFrame.getInstance(), "Generate Done");
            this.gridControl2.reloadData();
        }                
    }//GEN-LAST:event_btngenerateActionPerformed

    private void btnconfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconfirmActionPerformed
        // TODO add your handling code here:
        if(this.controller.getVo().getBilling_status() == 1){
            JOptionPane.showMessageDialog(MDIFrame.getInstance(), "Already Confirm");
        }else{
            this.controller.confirmBilling();        
        }
        
    }//GEN-LAST:event_btnconfirmActionPerformed

    private void btntransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntransferActionPerformed
        if(this.controller.getVo().getBilling_status() == 0){
            JOptionPane.showMessageDialog(MDIFrame.getInstance(), "Please confirm first");
        }else{
            this.controller.transferBilling();
        }
    }//GEN-LAST:event_btntransferActionPerformed

    private void saveButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnconfirm;
    private javax.swing.JButton btngenerate;
    private javax.swing.JButton btntransfer;
    private org.openswing.swing.table.columns.client.ComboColumn cbbillingmonth;
    private org.openswing.swing.table.columns.client.ComboColumn comboColumn1;
    private org.openswing.swing.table.columns.client.CurrencyColumn currencyColumn1;
    private org.openswing.swing.table.columns.client.DateColumn dateColumn1;
    private org.openswing.swing.table.columns.client.DateColumn dateColumn2;
    private org.openswing.swing.table.columns.client.DateColumn dateColumn3;
    private org.openswing.swing.client.DeleteButton deleteButton1;
    private org.openswing.swing.client.EditButton editButton1;
    private org.openswing.swing.client.FilterButton filterButton1;
    private org.openswing.swing.client.GridControl gridControl1;
    private org.openswing.swing.client.GridControl gridControl2;
    private org.openswing.swing.client.InsertButton insertButton1;
    private org.openswing.swing.table.columns.client.IntegerColumn integerColumn1;
    private org.openswing.swing.table.columns.client.IntegerColumn integerColumn2;
    private org.openswing.swing.client.NavigatorBar navigatorBar1;
    private org.openswing.swing.client.NavigatorBar navigatorBar2;
    private org.openswing.swing.client.ReloadButton reloadButton1;
    private org.openswing.swing.client.SaveButton saveButton1;
    private org.openswing.swing.table.columns.client.TextColumn textColumn1;
    private org.openswing.swing.table.columns.client.TextColumn textColumn2;
    private org.openswing.swing.table.columns.client.TextColumn textColumn3;
    // End of variables declaration//GEN-END:variables
}
